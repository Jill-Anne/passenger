plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> 
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.capstone.trico"
    compileSdk = 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.capstone.trico"
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // Inject the API key as a build config field for Google Maps
        resValue "string", "google_maps_api_key", project.hasProperty('MAPS_API_KEY') ? project.MAPS_API_KEY : ""
    }

    buildTypes {
        release {
            // Add your own signing config for the release build if needed
            signingConfig signingConfigs.debug
        }
    }

    buildFeatures {
        buildConfig = true
    }
}

flutter {
    source '../..'  // Adjust path to Flutter SDK if needed
}

dependencies {
    implementation 'com.google.firebase:firebase-firestore:24.0.0'
    implementation 'com.google.firebase:firebase-messaging:23.1.0'

    // Maps SDK for Android
    implementation "com.google.android.gms:play-services-maps:19.0.0"
}

// Apply Google services plugin
apply plugin: 'com.google.gms.google-services'

